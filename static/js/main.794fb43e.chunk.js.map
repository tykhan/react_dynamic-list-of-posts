{"version":3,"sources":["components/PostsList/PostsList.jsx","api/post.js","api/comments.js","components/Loader/Loader.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","todos","setPostId","selectedPostId","className","map","todo","key","id","userId","title","type","onClick","postId","BASE_URL","getTodos","a","fetch","json","postDetails","detail","getPostComments","comments","response","data","filter","comment","deletePostComment","commentId","method","link","addPostComment","name","email","body","JSON","stringify","Loader","NewCommentForm","setComments","useState","setName","setEmail","setComment","onSubmit","event","preventDefault","then","result","placeholder","value","onChange","e","target","PostDetails","setPostDetails","hiddenComments","setHiddenComments","useEffect","postApi","length","App","todosFromServer","setTodosFromServer","selectedUserId","setSelectedUserId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.794fb43e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostsList.scss';\n\nexport const PostsList = ({ todos, setPostId, selectedPostId }) => {\n  const handleClick = (postId) => {\n    if (selectedPostId === postId) {\n      setPostId(0);\n    } else {\n      setPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {todos.map(todo => (\n          <li className=\"PostsList__item\" key={todo.id}>\n            <div>\n              <b>\n                {`[User #${todo.userId}]:`}\n                {' '}\n              </b>\n              {todo.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(todo.id)}\n            >\n              {selectedPostId === todo.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const getTodos = async() => {\n  const todos = await fetch(`${BASE_URL}posts`);\n\n  return todos.json();\n};\n\nexport const postDetails = async(id) => {\n  const detail = await fetch(`${BASE_URL}posts/${id}`);\n\n  return detail.json();\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const getPostComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}comments/`);\n  const response = await comments.json();\n\n  return response.data.filter(comment => comment.postId === postId);\n};\n\nexport const deletePostComment = async(commentId) => {\n  const link = await fetch(`${BASE_URL}comments/${commentId}`,\n    { method: 'DELETE' });\n  const response = await link.json();\n\n  return response.data;\n};\n\nexport const addPostComment = async(postId, name, email, body) => {\n  fetch(`${BASE_URL}comments`,\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        postId, name, email, body,\n      }),\n    });\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { addPostComment, getPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ id, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const handleSubmit = (postId, userName, userEmail, body) => {\n    addPostComment(postId, userName, userEmail, body)\n      .then(() => getPostComments(id)\n        .then(result => setComments(result)));\n\n    setName('');\n    setEmail('');\n    setComment('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        handleSubmit(id, name, email, comment);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment}\n          onChange={e => setComment(e.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  id: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as postApi from '../../api/post';\nimport { getPostComments, deletePostComment } from '../../api/comments';\n\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ id }) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [hiddenComments, setHiddenComments] = useState(true);\n\n  useEffect(() => {\n    postApi.postDetails(id)\n      .then((result) => {\n        setPostDetails(result.data);\n      });\n\n    getPostComments(id)\n      .then((result) => {\n        setComments(result);\n      });\n  }, [id]);\n\n  if (!postDetails) {\n    return <Loader />;\n  }\n\n  return (\n    postDetails && (\n      <div className=\"PostDetails\">\n        <h2>Post details:</h2>\n\n        <section className=\"PostDetails__post\">\n          <p>{postDetails.title}</p>\n        </section>\n        <section className=\"PostDetails__body\">\n          <p>{postDetails.body}</p>\n        </section>\n\n        {comments\n        && (\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setHiddenComments(!hiddenComments)}\n            >\n              {`${hiddenComments\n                ? 'Hide' : 'Show'} ${comments.length} comments`}\n            </button>\n\n            {hiddenComments\n            && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li className=\"PostDetails__list-item\" key={comment.id}>\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={async() => {\n                        deletePostComment(comment.id);\n                        setComments(await getPostComments(postDetails.id));\n                      }}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )\n            }\n          </section>\n        )}\n\n        <section>\n          <div className=\"PostDetails__form-wrapper\">\n            <NewCommentForm id={id} setComments={setComments} />\n          </div>\n        </section>\n      </div>\n    )\n  );\n};\n\nPostDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport * as postApi from './api/post';\n\nconst App = () => {\n  const [todosFromServer, setTodosFromServer] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    postApi.getTodos()\n      .then((result) => {\n        setTodosFromServer(\n          result.data\n            .filter(todo => ((+selectedUserId === 0)\n              ? todo\n              : todo.userId === +selectedUserId)),\n        );\n      });\n  }, [selectedUserId]);\n\n  const setPostId = (id) => {\n    setSelectedPostId(id);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={(event) => {\n              setSelectedUserId(event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            todos={todosFromServer}\n            setPostId={setPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && <PostDetails id={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}